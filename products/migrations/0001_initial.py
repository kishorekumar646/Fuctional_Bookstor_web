# Generated by Django 5.0.6 on 2024-05-20 14:59

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_BOOK_NAME', message='Invalid book name. Special characters allowed are _ , + -', regex='^[A-Za-z\\s\\-_,\\.:;()""]+$')])),
                ('slug', models.SlugField(unique=True)),
                ('author', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_AUTHOR_NAME', message='Invalid book author. Special characters allowed are _ , + -', regex='^[A-Za-z\\s\\-_,\\.:;()""]+$')])),
                ('image_cover', models.ImageField(blank=True, default=None, null=True, upload_to='upload_photos/book_photos/')),
                ('description', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_BOOK_NAME', message='Invalid book name. Special characters allowed are _ , + -', regex='^[A-Za-z\\s\\-_,\\.:;()""]+$')])),
                ('category', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Programming'), (2, 'Networking'), (3, 'Python'), (4, 'Action and Adventure'), (5, 'Detective and Mystery'), (6, 'Historical Fiction'), (7, 'Fiction')], default=None, null=True)),
                ('label', models.CharField(blank=True, choices=[('P', 'primary'), ('S', 'scondary'), ('D', 'danger')], default='P', max_length=1, null=True)),
                ('price', models.FloatField(blank=True, default=1, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Book product',
                'ordering': ['price'],
                'unique_together': {('title', 'slug')},
            },
        ),
    ]
